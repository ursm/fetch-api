module Fetch
  class FormData
    include Enumerable[[String, String | File]]

    extend Forwardable

    attr_reader entries: Array[[String, String | File]]

    def self.build: (_Each[[_ToS, _ToS | File]]) -> FormData

    def initialize: () -> void
    def append: (_ToS, _ToS | File) -> void
    def delete: (_ToS) -> void
    def get: (_ToS) -> (String | File)?
    def get_all: (_ToS) -> Array[String | File]
    def has: (_ToS) -> bool
    def keys: -> Array[String]
    def set: (_ToS, _ToS | File) -> void
    def values: () -> Array[String | File]

    def each: () { ([String, String | File]) -> void } -> Array[[String, String | File]]
            | () -> Enumerator[[String, String | File], Array[[String, String | File]]]
  end
end
