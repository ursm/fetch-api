module Fetch
  class Client
    include Singleton

    def self.instance: () -> Client

    def fetch: (
      string,
      method: String | Symbol,
      headers: _Each[[_ToS, _ToS]],
      body: (String | FormData | URLSearchParams)?,
      redirect: 'follow' | 'error' | 'manual' | :follow | :error | :manual,
      ?redirected: bool
    ) -> Response

    private

    def initialize: () -> void
    def pool: () -> ConnectionPool
    def to_response: (string, Net::HTTPResponse, bool) -> Response
  end
end
